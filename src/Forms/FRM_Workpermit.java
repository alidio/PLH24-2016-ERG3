package Forms;

import company.DBManager;
import company.EmployeeWPData;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.persistence.TypedQuery;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class FRM_Workpermit extends javax.swing.JFrame {
    
    private JFrame thisframe;  //Αυτό το παράθυρο (Χρήση στον listener)
    private JFrame prevwin; //Προηγούμενο παράθυρο για επιστροφή στο menu
    private EntityManager em;
    private ArrayList<EmployeeWPData> empList;

    public FRM_Workpermit(JFrame prevwin) {
        this.prevwin = prevwin;
        thisframe = this;
        this.em = DBManager.em;
        
        this.prevwin.setEnabled(false);
        
        initComponents();
        
        //Γέμισμα του συγκεντρωτικού πίνακα
        fillTBSyg();
    }

    //Καθαρίζει τα δεδομένα του πίνακα
    private void delTBLines(JTable tbl) {
        DefaultTableModel dtm = (DefaultTableModel) TBSyg.getModel();
        int rows = dtm.getRowCount();
        for (int i=0;i<rows;i++) {
            dtm.removeRow(0);
        }
    }
   
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TBSyg = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TBAnal = new javax.swing.JTable();
        PBStartSim = new javax.swing.JButton();
        PBExtractXML = new javax.swing.JButton();
        PBExit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Συγκεντρωτικός πίνακας αιτημάτων άδειας");

        TBSyg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Επώνυμο", "Όνομα", "E-mail", "Προϊστάμενος", "Αιτήματα Συνολικά", "Αιτήματα Εγκεκριμένα"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TBSyg.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TBSyg.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(TBSyg);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Αιτήματα Άδειας");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Αναλυτικός πίνακας αιτημάτων εργαζομένου");

        TBAnal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Τύπος", "Έναρξη", "Λήξη", "Ημέρες", "Έγκριση"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(TBAnal);

        PBStartSim.setText("Έναρξη Προσομοίωσης");
        PBStartSim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PBStartSimActionPerformed(evt);
            }
        });

        PBExtractXML.setText("Εξαγωγή αιτημάτων σε XML");
        PBExtractXML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PBExtractXMLActionPerformed(evt);
            }
        });

        PBExit.setText("Έξοδος");
        PBExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PBExitActionPerformed(evt);
            }
        });

        jButton1.setText("test");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(PBStartSim)
                        .addGap(31, 31, 31)
                        .addComponent(PBExtractXML)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 787, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jScrollPane1)))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(278, 278, 278)
                .addComponent(PBExit)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PBStartSim)
                    .addComponent(PBExtractXML))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PBExit)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PBExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PBExitActionPerformed
        //Κλείσιμο παραθύρου
        //Ενεργοποίηση προηγούμενου παραθύρου
        prevwin.setEnabled(true);
        dispose();
    }//GEN-LAST:event_PBExitActionPerformed

    private void PBStartSimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PBStartSimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PBStartSimActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //Κλείσιμο παραθύρου
        //Ενεργοποίηση προηγούμενου παραθύρου
        prevwin.setEnabled(true);
        dispose();
    }//GEN-LAST:event_formWindowClosing

    private void fillTBSyg(){
       
        // Ανακτούμε τα στοιχεία αδειών των υπαλλήλων της ΒΔ
        TypedQuery<Object[]> query = em.createQuery(
            "SELECT  e.lname, \n" +
                    "e.fname, \n" +
                    "e.email, \n" +
                    "COALESCE((select e1.managerId.fname from Employee e1 where e1 = e),' '), \n" +
                    "COALESCE((select e2.managerId.fname from Employee e2 where e2 = e),' '), \n" +
                    "COALESCE((select sum(w1.numdays) from Workpermit w1 where w1.employeeId = e),0), \n" +
                    "COALESCE((select sum(w2.numdays) from Workpermit w2 where w2.employeeId = e and w2.approved = 1),0) \n" +
                    "FROM Employee e", Object[].class);
        
        List<Object[]> results = query.getResultList();
        
        for (Object[] result : results) {
        System.out.println("lname: " + result[0] + 
                         "| fname: " + result[1]+
                         "| email: " + result[2] + 
                         "| mnager lname: " + result[3]+
                         "| manager fname: " + result[4] + 
                         "| synolikes: " + result[5]+
                         "| eggekrimenes: " + result[6]);
  } 
        //Καθαρισμός του πίνακα
        delTBLines(TBSyg);
        
        //TableModel του TBSyg
        DefaultTableModel Mdl = (DefaultTableModel) TBSyg.getModel();
        //Ορισμός γραμμών TBSyg = γραμμές query
        Mdl.setRowCount(results.size());
        // Για κάθε υπάλληλο που υπάρχει στο ArrayList
        
        int i=0;
        for (Object[] result : results) {
            // Στοιχεία του υπαλλήλου
            String lname = (String) result[0];
            String fname = (String) result[1];            
            String email = (String) result[2];            
            String manager = (String) result[3] +" "+ (String) result[4];
            Integer numdays = (int) result[5];
            Integer approved = (int) result[6];

            Mdl.setValueAt(lname, i, 0);
            Mdl.setValueAt(fname, i, 1);
            Mdl.setValueAt(email, i, 2);
            Mdl.setValueAt(manager, i, 3);
            Mdl.setValueAt(numdays, i, 4);
            Mdl.setValueAt(approved, i, 5);
            i++;
        }       
           
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void PBExtractXMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PBExtractXMLActionPerformed
//        
//        int selectedRow = TBSyg.getSelectedRow();
//        
//        if (selectedRow == -1) {
//            JOptionPane.showMessageDialog(this, "ExportPlayListIsNotSelected", "NoRecordIsSelected",
//                    JOptionPane.WARNING_MESSAGE);
//        } else {
//            selectedRow = TBSyg.convertRowIndexToModel(selectedRow);
//            playList = playListList.get(selectedRow);
//
//            //Δημιουργούμε παράθυρο επιλογέα αρχείου
//            JFileChooser chooser = new JFileChooser();
//            //Φιλτράρουμε ώστε ο τύπος αρχείου να είναι μόνο xml
//            XMLFileFilter fileFilterXML = new XMLFileFilter();
//            chooser.setFileFilter(fileFilterXML);
//
//            //ο τύπος του παραθύρου να είναι αποθήκευσης
//            int selection = chooser.showSaveDialog(this);
//
//            //Εάν επιλέχθηκε Αποθήκευση
//            if (selection == JFileChooser.APPROVE_OPTION) {
//
//                //το όνομα που δόθηκε στο αρχείο
//                File selectedFile = chooser.getSelectedFile();
//
//                if (selectedFile != null) {
//                    //Το αρχείο να έχει .xml extension
//                    if (!selectedFile.getName().toLowerCase().endsWith(".xml")) {
//                        selectedFile = new File(selectedFile + ".xml");
//                    }
//                    //Εάν το όνομα του αρχείου υπάρχει ήδη στην επιλεγμένη τοποθεσία για αποθήκευση
//                    if (selectedFile.exists()) {
//                        int confirm = JOptionPane.showConfirmDialog(this,"FileAlreadyExists","Replace", 
//                                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
//                        if (confirm != JOptionPane.YES_OPTION) {
//                            return;
//                        }
//                    }
//
//                    if (loggerUtil.isDebugEnabled()) {
//                        loggerUtil.debug("Exporting PlayList: " + playList.getIdPlayList()
//                                + " to XML with filename: " + selectedFile.getName());
//                    }
//                    //Κάνουμε παραγωγή και εξαγωγή του XML αρχείου
//                    controller.exportPlayListToXML(playList, selectedFile);
//
//                } else {
//                    JOptionPane.showMessageDialog(this, "FileDefExportError", "Error", JOptionPane.ERROR_MESSAGE);
//                }
//            }
//        }
    }//GEN-LAST:event_PBExtractXMLActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FRM_Workpermit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FRM_Workpermit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FRM_Workpermit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FRM_Workpermit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        /*
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FRM_Workpermit().setVisible(true);
            }
        });
        */
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton PBExit;
    private javax.swing.JButton PBExtractXML;
    private javax.swing.JButton PBStartSim;
    private javax.swing.JTable TBAnal;
    private javax.swing.JTable TBSyg;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
